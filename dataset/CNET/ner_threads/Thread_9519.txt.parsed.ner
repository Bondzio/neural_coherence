(TOP (S (NP (PRP I)) (VP (AUX am) (VP (VBG running) (NP (NNS windows)) (NP (date (CD 2000))) (PP (IN on) (NP (DT both) (NN comp))))) (. .)) )
(TOP (S (S (NP (PRP$ My) (NN network)) (VP (VBZ works) (ADJP (JJ good)))) (CC but) (S (NP (PRP$ my) (NN one)) (VP (VB comp))) (. .)) )
(TOP (S (VP (VBZ locks) (PRT (RP up)) (PP (IN on) (NP (PRP me)))) (. .)) )
(TOP (S (NP (PRP I)) (VP (AUX have) (VP (VB try) (NP (NP (DT every) (NN thing)) (SBAR (S (NP (PRP I)) (VP (MD could) (VP (VB think) (PP (IN of))))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (VBP thank) (NP (PRP you)) (PP (IN for) (NP (NP (DT any) (NN help)) (SBAR (S (NP (PRP you)) (VP (MD can) (VP (VB give) (NP (PRP me)) (NP (NNP Ramrod)))))))))) )
(TOP (S (NP (DT no) (NNS programs)) (VP (VBG running) (SBAR (IN while) (S (VP (NN lockup) (NP (NN occurs====no) (NNS ideas)))))) (. .)) )
(TOP (S (NP (PRP i)) (VP (AUX do) (RB n't) (VP (AUX have) (S (VP (TO to) (VP (VB run) (NP (NP (NN anything)) (VP (ADVP (RB just)) (VBG starting) (PRT (RP up)) (SBAR (S (NP (DT the) (NN network)) (VP (VBZ makes) (S (NP (PRP it)) (VP (VB lock) (PRT (RP up)) (PP (IN at) (NP (NNS times))))))))))))))) (. .)) )
(TOP (S (S (NP (PRP You)) (ADVP (RB just)) (VP (VB say) (SBAR (IN that) (S (NP (PRP$ your) (NN network)) (VP (AUX is) (VP (VBG working) (ADJP (JJ good)))) (. .)))) (. .)) (SBARQ (WHNP (WP What)) (SQ (AUX have) (NP (PRP you)) (VP (VP (VB think)) (CC and) (VP (AUX done)))) (. ?))) )
