if you are using a non admin account on win7 then to reactivate a volume (drive) you need to login as admin or enter the admin password to register the device on the system if the drive is installed internally.
there should not be a password for a non encrypted drive.
if you did format the drive and then used file system encryption then you have a problem.
to break the encryption request a linux live cd or usb stick will do the trick.
it is also very handy for blanking drives.
if the drive is installed within the computer it will be listed in the partitioning program as sda if it is the primary drive and if it is the second drive it will show up as sdb.
either way you will be able to see where you have your existing windows os installed usually this will show up as drive sda but not always.
just make certain you do not wipe your existing windows or just unplug the drive that you have it on and be certain you do not format anything other than the drive you want to nuke and/or reformat!
the partitioning program will unmount the drive, which in turn stops the ntfs file encryption request then you simply reformat to ntfs without drive encryption.
the encryption request is at the beginning of the drive so you need to blank to unformatted first (remove partition).
make sure that the drive is then seen as nothing but free space.
do not forget that if you use another file system other than ntfs or vfat your drive will not be seen as a file system under windows.
if you did encrypt the drive then you must be using vista win7 or xp pro, as drive encryption is not available with the &quot;home&quot; versions.
as to how to wipe a drive with linux it is a breeze with command line.
if you open a terminal window with a live cd or usb stick your installed primary drive will show up as sda.
the command to wipe the drive by overwriting is (without the quotes) &quot;dd if=/dev/sda of=/dev/urandom&quot; if your live cd or usb stick mounted the drive automatically then you will need to simply unmount the drive and blank the drive without a mounted file system.
in linux (the same as most unix and bsd systems and windows for that matter) drives are accessible as system devices even if you cannot read the file system on the drive because you have unmounted the file system.
essentially all dd does with this command is write random numbers to all sectors of the drive including the boot sector so it will be completely blank of data.
it can take a long time if your drive is a big one but this is essentially what commercial drive wiping software does.
this causes huge amounts of confusion with users who do not understand the difference between the device and the file system on the device!
think of it simply as a device and you will see what i am getting at, the file system is on the device and needs to be indexed on the running operating system as a file system that can be read.
however if you unmount...in linux the command umount, then the device can still be written to even though it cannot be read by the higher level of the os that reads file systems.
dd is a core program that writes to devices and does not care about file systems.
windows does exactly the same thing but obscures how it actually does things and makes users find freeware to do things that only the &quot;pro&quot; versions do!
